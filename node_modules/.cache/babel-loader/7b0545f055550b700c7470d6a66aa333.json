{"ast":null,"code":"import _slicedToArray from\"D:\\\\messenger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import'./style.css';import Layout from'../../components/Layout';import{useDispatch,useSelector}from'react-redux';import{getRealtimeUsers,updateMessage,getRealtimeConversations}from'../../actions';var User=function User(props){var user=props.user,_onClick=props.onClick;return/*#__PURE__*/React.createElement(\"div\",{onClick:function onClick(){return _onClick(user);},className:\"displayName\"},/*#__PURE__*/React.createElement(\"div\",{className:\"displayPic\"},/*#__PURE__*/React.createElement(\"img\",{src:\"https://i.pinimg.com/originals/be/ac/96/beac96b8e13d2198fd4bb1d5ef56cdcf.jpg\",alt:\"\"})),/*#__PURE__*/React.createElement(\"div\",{style:{display:'flex',flex:1,justifyContent:'space-between',margin:'0 10px'}},/*#__PURE__*/React.createElement(\"span\",{style:{fontWeight:500}},user.firstName,\" \",user.lastName),/*#__PURE__*/React.createElement(\"span\",{className:user.isOnline?\"onlineStatus\":\"onlineStatus off\"})));};var HomePage=function HomePage(props){var dispatch=useDispatch();var auth=useSelector(function(state){return state.auth;});var user=useSelector(function(state){return state.user;});var _useState=useState(false),_useState2=_slicedToArray(_useState,2),chatStarted=_useState2[0],setChatStarted=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),chatUser=_useState4[0],setChatUser=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),userUid=_useState8[0],setUserUid=_useState8[1];var unsubscribe;useEffect(function(){unsubscribe=dispatch(getRealtimeUsers(auth.uid)).then(function(unsubscribe){return unsubscribe;}).catch(function(error){console.log(error);});},[]);//console.log(user);\n//componentWillUnmount\nuseEffect(function(){return function(){//cleanup\nunsubscribe.then(function(f){return f();}).catch(function(error){return console.log(error);});};},[]);var initChat=function initChat(user){setChatStarted(true);setChatUser(\"\".concat(user.firstName,\" \").concat(user.lastName));setUserUid(user.uid);console.log(user);dispatch(getRealtimeConversations({uid_1:auth.uid,uid_2:user.uid}));};var submitMessage=function submitMessage(e){var msgObj={user_uid_1:auth.uid,user_uid_2:userUid,message:message};if(message!==\"\"){dispatch(updateMessage(msgObj)).then(function(){setMessage('');});}//console.log(msgObj);\n};return/*#__PURE__*/React.createElement(Layout,null,/*#__PURE__*/React.createElement(\"section\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"listOfUsers\"},user.users.length>0?user.users.map(function(user){return/*#__PURE__*/React.createElement(User,{onClick:initChat,key:user.uid,user:user});}):null),/*#__PURE__*/React.createElement(\"div\",{className:\"chatArea\"},/*#__PURE__*/React.createElement(\"div\",{className:\"chatHeader\"},chatStarted?chatUser:''),/*#__PURE__*/React.createElement(\"div\",{className:\"messageSections\"},chatStarted?user.conversations.map(function(con){return/*#__PURE__*/React.createElement(\"div\",{style:{textAlign:con.user_uid_1==auth.uid?'right':'left'}},/*#__PURE__*/React.createElement(\"p\",{className:\"messageStyle\"},con.message));}):null),chatStarted?/*#__PURE__*/React.createElement(\"div\",{className:\"chatControls\"},/*#__PURE__*/React.createElement(\"textarea\",{value:message,onChange:function onChange(e){return setMessage(e.target.value);},placeholder:\"Write Message\"}),/*#__PURE__*/React.createElement(\"button\",{onClick:submitMessage},\"Send\")):null)));};export default HomePage;","map":{"version":3,"sources":["D:/messenger/src/containers/HomePage/index.js"],"names":["React","useEffect","useState","Layout","useDispatch","useSelector","getRealtimeUsers","updateMessage","getRealtimeConversations","User","props","user","onClick","display","flex","justifyContent","margin","fontWeight","firstName","lastName","isOnline","HomePage","dispatch","auth","state","chatStarted","setChatStarted","chatUser","setChatUser","message","setMessage","userUid","setUserUid","unsubscribe","uid","then","catch","error","console","log","f","initChat","uid_1","uid_2","submitMessage","e","msgObj","user_uid_1","user_uid_2","users","length","map","conversations","con","textAlign","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './style.css';\r\nimport Layout from '../../components/Layout';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getRealtimeUsers, updateMessage, getRealtimeConversations } from '../../actions';\r\n\r\n\r\nconst User = (props) => {\r\n\r\n\r\n  const {user, onClick} = props;\r\n\r\n  return (\r\n    <div onClick={() => onClick(user)} className=\"displayName\">\r\n                  <div className=\"displayPic\">\r\n                      <img src=\"https://i.pinimg.com/originals/be/ac/96/beac96b8e13d2198fd4bb1d5ef56cdcf.jpg\" alt=\"\" />\r\n                  </div>\r\n                  <div style={{ display: 'flex', flex: 1, justifyContent: 'space-between', margin: '0 10px'}}>\r\n                      <span style={{fontWeight: 500}}>{user.firstName} {user.lastName}</span>\r\n                      <span className={user.isOnline ? `onlineStatus` : `onlineStatus off`}></span>\r\n                  </div>\r\n              </div>\r\n  );\r\n}\r\n\r\nconst HomePage = (props) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const auth = useSelector(state => state.auth);\r\n  const user = useSelector(state => state.user);\r\n  const [chatStarted, setChatStarted] = useState(false);\r\n  const [chatUser, setChatUser] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [userUid, setUserUid] = useState(null);\r\n  let unsubscribe;\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    unsubscribe = dispatch(getRealtimeUsers(auth.uid))\r\n    .then(unsubscribe => {\r\n      return unsubscribe;\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n\r\n    \r\n\r\n\r\n  }, []);\r\n\r\n  //console.log(user);\r\n\r\n  //componentWillUnmount\r\n  useEffect(() => {\r\n    return () => {\r\n      //cleanup\r\n      unsubscribe.then(f => f()).catch(error => console.log(error));\r\n\r\n    }\r\n  }, []);\r\n\r\n\r\n  const initChat = (user) => {\r\n\r\n    setChatStarted(true)\r\n    setChatUser(`${user.firstName} ${user.lastName}`)\r\n    setUserUid(user.uid);\r\n\r\n    console.log(user);\r\n\r\n    dispatch(getRealtimeConversations({ uid_1: auth.uid, uid_2: user.uid }));\r\n\r\n  }\r\n\r\n  const submitMessage = (e) => {\r\n\r\n    const msgObj = {\r\n      user_uid_1: auth.uid,\r\n      user_uid_2: userUid,\r\n      message\r\n    }\r\n\r\n\r\n    if(message !== \"\"){\r\n      dispatch(updateMessage(msgObj))\r\n      .then(() => {\r\n        setMessage('')\r\n      });\r\n    }\r\n\r\n    //console.log(msgObj);\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <Layout>\r\n      <section className=\"container\">\r\n\r\n        <div className=\"listOfUsers\">\r\n\r\n\r\n          {\r\n            user.users.length > 0 ?\r\n            user.users.map(user => {\r\n              return (\r\n                <User \r\n                  onClick={initChat}\r\n                  key={user.uid} \r\n                  user={user} \r\n                  />\r\n              );\r\n            }) : null\r\n          }\r\n\r\n            \r\n                    \r\n        </div>\r\n\r\n        <div className=\"chatArea\">\r\n            \r\n            <div className=\"chatHeader\"> \r\n            {\r\n              chatStarted ? chatUser : ''\r\n            }\r\n            </div>\r\n            <div className=\"messageSections\">\r\n                {\r\n                  chatStarted ? \r\n                  user.conversations.map(con =>\r\n                    <div style={{ textAlign: con.user_uid_1 == auth.uid ? 'right' : 'left' }}>\r\n                    <p className=\"messageStyle\" >{con.message}</p>\r\n                  </div> )\r\n                  : null\r\n                }\r\n                \r\n\r\n            </div>\r\n            {\r\n              chatStarted ? \r\n              <div className=\"chatControls\">\r\n                <textarea \r\n                  value={message}\r\n                  onChange={(e) => setMessage(e.target.value)}\r\n                  placeholder=\"Write Message\"\r\n                />\r\n                <button onClick={submitMessage}>Send</button>\r\n            </div> : null\r\n            }\r\n            \r\n        </div>\r\n    </section>\r\n  </Layout>\r\n  );\r\n}\r\n\r\nexport default HomePage;"]},"metadata":{},"sourceType":"module"}