{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\messenger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\messenger\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{auth,firestore}from'firebase';import{authConstanst}from'./constants';import'firebase/auth';import'firebase/firestore';// import * as auth from \"@firebase/auth\";\n// import * as  firestore from \"@firebase/firestore\";\nimport{getRealtimeUsers}from'./user.actions';export var signup=function signup(user){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var db;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:db=firestore();dispatch({type:\"\".concat(authConstanst.USER_LOGIN,\"_REQUEST\")});auth().createUserWithEmailAndPassword(user.email,user.password).then(function(data){console.log(data);var currentUser=auth().currentUser;var name=\"\".concat(user.firstName,\" \").concat(user.lastName);currentUser.updateProfile({displayName:name}).then(function(){//if you are here means it is updated successfully\ndb.collection('users').doc(data.user.uid).set({firstName:user.firstName,lastName:user.lastName,uid:data.user.uid,createdAt:new Date(),isOnline:true}).then(function(){//succeful\nvar loggedInUser={firstName:user.firstName,lastName:user.lastName,uid:data.user.uid,email:user.email};localStorage.setItem('user',JSON.stringify(loggedInUser));console.log('User logged in successfully...!');dispatch({type:\"\".concat(authConstanst.USER_LOGIN,\"_SUCCESS\"),payload:{user:loggedInUser}});}).catch(function(error){console.log(error);dispatch({type:\"\".concat(authConstanst.USER_LOGIN,\"_FAILURE\"),payload:{error:error}});});});}).catch(function(error){console.log(error);});case 3:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var signin=function signin(user){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:\"\".concat(authConstanst.USER_LOGIN,\"_REQUEST\")});auth().signInWithEmailAndPassword(user.email,user.password).then(function(data){console.log(data);var db=firestore();db.collection('users').doc(data.user.uid).update({isOnline:true}).then(function(){var name=data.user.displayName.split(\" \");var firstName=name[0];var lastName=name[1];var loggedInUser={firstName:firstName,lastName:lastName,uid:data.user.uid,email:data.user.email};localStorage.setItem('user',JSON.stringify(loggedInUser));dispatch({type:\"\".concat(authConstanst.USER_LOGIN,\"_SUCCESS\"),payload:{user:loggedInUser}});}).catch(function(error){console.log(error);});}).catch(function(error){console.log(error);dispatch({type:\"\".concat(authConstanst.USER_LOGIN,\"_FAILURE\"),payload:{error:error}});});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var isLoggedInUser=function isLoggedInUser(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var user;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:user=localStorage.getItem('user')?JSON.parse(localStorage.getItem('user')):null;if(user){dispatch({type:\"\".concat(authConstanst.USER_LOGIN,\"_SUCCESS\"),payload:{user:user}});}else{dispatch({type:\"\".concat(authConstanst.USER_LOGIN,\"_FAILURE\"),payload:{error:'Login again please'}});}case 2:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var logout=function logout(uid){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var db;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch({type:\"\".concat(authConstanst.USER_LOGOUT,\"_REQUEST\")});//Now lets logout user\ndb=firestore();db.collection('users').doc(uid).update({isOnline:false}).then(function(){auth().signOut().then(function(){//successfully\nlocalStorage.clear();dispatch({type:\"\".concat(authConstanst.USER_LOGOUT,\"_SUCCESS\")});}).catch(function(error){console.log(error);dispatch({type:\"\".concat(authConstanst.USER_LOGOUT,\"_FAILURE\"),payload:{error:error}});});}).catch(function(error){console.log(error);});case 3:case\"end\":return _context4.stop();}}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["D:/messenger/src/actions/auth.actions.js"],"names":["auth","firestore","authConstanst","getRealtimeUsers","signup","user","dispatch","db","type","USER_LOGIN","createUserWithEmailAndPassword","email","password","then","data","console","log","currentUser","name","firstName","lastName","updateProfile","displayName","collection","doc","uid","set","createdAt","Date","isOnline","loggedInUser","localStorage","setItem","JSON","stringify","payload","catch","error","signin","signInWithEmailAndPassword","update","split","isLoggedInUser","getItem","parse","logout","USER_LOGOUT","signOut","clear"],"mappings":"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","sourcesContent":["import { auth, firestore } from 'firebase';\nimport { authConstanst } from './constants';\nimport 'firebase/auth'\nimport 'firebase/firestore'\n// import * as auth from \"@firebase/auth\";\n// import * as  firestore from \"@firebase/firestore\";\nimport { getRealtimeUsers } from './user.actions';\n\n\nexport const signup = (user) => {\n\n    return async (dispatch) => {\n\n        const db = firestore();\n\n        dispatch({ type: `${authConstanst.USER_LOGIN}_REQUEST` });\n\n        auth()\n            .createUserWithEmailAndPassword(user.email, user.password)\n            .then(data => {\n                console.log(data);\n                const currentUser = auth().currentUser;\n                const name = `${user.firstName} ${user.lastName}`;\n                currentUser.updateProfile({\n                    displayName: name\n                })\n                    .then(() => {\n                        //if you are here means it is updated successfully\n                        db.collection('users')\n                            .doc(data.user.uid)\n                            .set({\n                                firstName: user.firstName,\n                                lastName: user.lastName,\n                                uid: data.user.uid,\n                                createdAt: new Date(),\n                                isOnline: true\n                            })\n                            .then(() => {\n                                //succeful\n                                const loggedInUser = {\n                                    firstName: user.firstName,\n                                    lastName: user.lastName,\n                                    uid: data.user.uid,\n                                    email: user.email\n                                }\n                                localStorage.setItem('user', JSON.stringify(loggedInUser));\n                                console.log('User logged in successfully...!');\n                                dispatch({\n                                    type: `${authConstanst.USER_LOGIN}_SUCCESS`,\n                                    payload: { user: loggedInUser }\n                                })\n                            })\n                            .catch(error => {\n                                console.log(error);\n                                dispatch({\n                                    type: `${authConstanst.USER_LOGIN}_FAILURE`,\n                                    payload: { error }\n                                });\n                            });\n                    });\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n\n    }\n\n\n}\n\nexport const signin = (user) => {\n    return async dispatch => {\n\n        dispatch({ type: `${authConstanst.USER_LOGIN}_REQUEST` });\n        auth()\n            .signInWithEmailAndPassword(user.email, user.password)\n            .then((data) => {\n                console.log(data);\n\n\n                const db = firestore();\n                db.collection('users')\n                    .doc(data.user.uid)\n                    .update({\n                        isOnline: true\n                    })\n                    .then(() => {\n                        const name = data.user.displayName.split(\" \");\n                        const firstName = name[0];\n                        const lastName = name[1];\n\n                        const loggedInUser = {\n                            firstName,\n                            lastName,\n                            uid: data.user.uid,\n                            email: data.user.email\n                        }\n\n                        localStorage.setItem('user', JSON.stringify(loggedInUser));\n\n                        dispatch({\n                            type: `${authConstanst.USER_LOGIN}_SUCCESS`,\n                            payload: { user: loggedInUser }\n                        });\n                    })\n                    .catch(error => {\n                        console.log(error)\n                    })\n\n\n\n\n\n            })\n            .catch(error => {\n                console.log(error);\n                dispatch({\n                    type: `${authConstanst.USER_LOGIN}_FAILURE`,\n                    payload: { error }\n                })\n            })\n\n\n\n    }\n}\n\nexport const isLoggedInUser = () => {\n    return async dispatch => {\n\n        const user = localStorage.getItem('user') ? JSON.parse(localStorage.getItem('user')) : null;\n\n        if (user) {\n            dispatch({\n                type: `${authConstanst.USER_LOGIN}_SUCCESS`,\n                payload: { user }\n            });\n        } else {\n            dispatch({\n                type: `${authConstanst.USER_LOGIN}_FAILURE`,\n                payload: { error: 'Login again please' }\n            });\n        }\n\n\n    }\n}\n\nexport const logout = (uid) => {\n    return async dispatch => {\n        dispatch({ type: `${authConstanst.USER_LOGOUT}_REQUEST` });\n        //Now lets logout user\n\n        const db = firestore();\n        db.collection('users')\n            .doc(uid)\n            .update({\n                isOnline: false\n            })\n            .then(() => {\n\n                auth()\n                    .signOut()\n                    .then(() => {\n                        //successfully\n                        localStorage.clear();\n                        dispatch({ type: `${authConstanst.USER_LOGOUT}_SUCCESS` });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        dispatch({ type: `${authConstanst.USER_LOGOUT}_FAILURE`, payload: { error } })\n                    })\n\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n\n\n\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}